name: Build and Release

on:
  release:
    types: [created]

jobs:
  build-and-release:
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libjemalloc-dev && sudo apt-get install -y libcurl4-openssl-dev
        if: startsWith(matrix.os, 'ubuntu')
      - name: Set up Swift
        uses: swift-actions/setup-swift@v2
      - name: Build project
        run: make build
      - name: Upload Linux Release Asset
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # upload the built when os is ubuntu
        if: github.event_name == 'release' && matrix.os == 'ubuntu-latest'
        with:
          files: |
            ../executables/mock-telegram-linux-x86_64
      - name: Upload Linux MacOS Asset
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # upload the built when os is macos
        if: github.event_name == 'release' && matrix.os == 'macos-latest'
        with:
          files: |
            ../executables/mock-telegram-darwin-arm64
